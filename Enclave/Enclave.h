#pragma once
#include "Encryption_Decryption.h"				//Encryption/Deecryption Block
#include "sgx_trts.h"
#include "sgx_tcrypto.h"
#include "Sealing.h"
#include "LoggingClient.h"
#include "sgx_tkey_exchange.h"
#include "sgx_utils.h"
#include "TDK.h"
#include "sgx_lfence.h"
#include "Enclave_t.h"
#include  "sgx_cpuid.h"
using Key = sgx_aes_gcm_128bit_key_t;
struct ManagementUnit;
static const sgx_ec256_public_t g_sp_pub_key = {
	{
		0x72, 0x12, 0x8a, 0x7a, 0x17, 0x52, 0x6e, 0xbf,
		0x85, 0xd0, 0x3a, 0x62, 0x37, 0x30, 0xae, 0xad,
		0x3e, 0x3d, 0xaa, 0xee, 0x9c, 0x60, 0x73, 0x1d,
		0xb0, 0x5b, 0xe8, 0x62, 0x1c, 0x4b, 0xeb, 0x38
	},
	{
		0xd4, 0x81, 0x40, 0xd9, 0x50, 0xe2, 0x57, 0x7b,
		0x26, 0xee, 0xb7, 0x41, 0xe7, 0xc6, 0x14, 0xe2,
		0x24, 0xb7, 0xbd, 0xc9, 0x03, 0xf2, 0x9a, 0x28,
		0xa8, 0x3c, 0xc8, 0x10, 0x11, 0x14, 0x5e, 0x06
	}
};

#if defined(__cplusplus)
extern "C" {
#endif
void printf(const char *fmt, ...);
sgx_status_t ecall_AuditLoggingEnc_sample(const char *plain, int length, char *cipher, int lengthoutput, const char* filename, int lengthFilename);
sgx_status_t ecall_AuditLoggingDec_sample(char *input, int length,  char *fileName, int lengthFileName, const char* filename, int lengthFilename);
#if defined(__cplusplus)
}
#endif